{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tilak\\\\OneDrive\\\\Documents\\\\GitHub\\\\pwa-for-rde-test\\\\src\\\\components\\\\TempTracker.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// import { useState } from \"react\"\nfunction TempTracker() {\n  let id, options; // Output Data\n  // const [latitude, setLatitude] = useState(0);\n  // const [longitude, setLongitude] = useState(0);\n\n  function success(pos) {\n    // To start logging\n    // if (latitude === 0 && longitude === 0) {\n    //   return\n    // }\n    // Coordinates array data:\n    // setLatitude(pos.coords.latitude);\n    // setLongitude(pos.coords.longitude);\n    console.log(pos.coords.latitude);\n    console.log(pos.coords.longitude);\n  }\n\n  function error(err) {\n    console.warn('ERROR(' + err.code + '): ' + err.message);\n  }\n\n  options = {\n    enableHighAccuracy: true,\n    maximumAge: 0\n  }; // if (!isOn) {\n  //   console.log(\"Stopping Watch.\");\n  //   navigator.geolocation.clearWatch(id);\n  // }\n\n  function startWatch() {\n    console.log(\"Starting Watch.\");\n    id = navigator.geolocation.watchPosition(success, error, options);\n  }\n\n  function stopWatch() {\n    console.log(\"Stopping Watch.\");\n    navigator.geolocation.clearWatch(id);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startWatch,\n      children: \"start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopWatch,\n      children: \"stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TempTracker;\nexport default TempTracker;\n\nvar _c;\n\n$RefreshReg$(_c, \"TempTracker\");","map":{"version":3,"sources":["C:/Users/tilak/OneDrive/Documents/GitHub/pwa-for-rde-test/src/components/TempTracker.js"],"names":["TempTracker","id","options","success","pos","console","log","coords","latitude","longitude","error","err","warn","code","message","enableHighAccuracy","maximumAge","startWatch","navigator","geolocation","watchPosition","stopWatch","clearWatch"],"mappings":";;;AAAA;AAEA,SAASA,WAAT,GAAuB;AACrB,MAAIC,EAAJ,EAAQC,OAAR,CADqB,CAGrB;AACA;AACA;;AAGA,WAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpB;AACA;AACA;AACA;AAEA;AACA;AACA;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,MAAJ,CAAWC,QAAvB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,MAAJ,CAAWE,SAAvB;AAED;;AAED,WAASC,KAAT,CAAeC,GAAf,EAAoB;AAClBN,IAAAA,OAAO,CAACO,IAAR,CAAa,WAAWD,GAAG,CAACE,IAAf,GAAsB,KAAtB,GAA8BF,GAAG,CAACG,OAA/C;AACD;;AAEDZ,EAAAA,OAAO,GAAG;AACRa,IAAAA,kBAAkB,EAAE,IADZ;AAERC,IAAAA,UAAU,EAAE;AAFJ,GAAV,CA3BqB,CAgCrB;AACA;AACA;AACA;;AAEA,WAASC,UAAT,GAAsB;AACpBZ,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAL,IAAAA,EAAE,GAAGiB,SAAS,CAACC,WAAV,CAAsBC,aAAtB,CAAoCjB,OAApC,EAA6CO,KAA7C,EAAoDR,OAApD,CAAL;AACD;;AAED,WAASmB,SAAT,GAAqB;AACnBhB,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAY,IAAAA,SAAS,CAACC,WAAV,CAAsBG,UAAtB,CAAiCrB,EAAjC;AACD;;AAED,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEgB,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEI,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;KAtDQrB,W;AAwDT,eAAeA,WAAf","sourcesContent":["// import { useState } from \"react\"\r\n\r\nfunction TempTracker() {\r\n  let id, options;\r\n\r\n  // Output Data\r\n  // const [latitude, setLatitude] = useState(0);\r\n  // const [longitude, setLongitude] = useState(0);\r\n\r\n\r\n  function success(pos) {\r\n    // To start logging\r\n    // if (latitude === 0 && longitude === 0) {\r\n    //   return\r\n    // }\r\n\r\n    // Coordinates array data:\r\n    // setLatitude(pos.coords.latitude);\r\n    // setLongitude(pos.coords.longitude);\r\n\r\n    console.log(pos.coords.latitude);\r\n    console.log(pos.coords.longitude);\r\n\r\n  }\r\n\r\n  function error(err) {\r\n    console.warn('ERROR(' + err.code + '): ' + err.message);\r\n  }\r\n\r\n  options = {\r\n    enableHighAccuracy: true,\r\n    maximumAge: 0\r\n  };\r\n\r\n  // if (!isOn) {\r\n  //   console.log(\"Stopping Watch.\");\r\n  //   navigator.geolocation.clearWatch(id);\r\n  // }\r\n\r\n  function startWatch() {\r\n    console.log(\"Starting Watch.\")\r\n    id = navigator.geolocation.watchPosition(success, error, options);\r\n  }\r\n\r\n  function stopWatch() {\r\n    console.log(\"Stopping Watch.\");\r\n    navigator.geolocation.clearWatch(id);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={startWatch}>start</button>\r\n      <button onClick={stopWatch}>stop</button>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default TempTracker"]},"metadata":{},"sourceType":"module"}