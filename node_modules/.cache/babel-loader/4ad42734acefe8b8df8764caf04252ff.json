{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tilak\\\\OneDrive\\\\Documents\\\\GitHub\\\\pwa-for-rde-test\\\\src\\\\components\\\\MyTimer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Timer from 'react-compound-timer';\nimport StartStopButton from './StartStopButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyTimer = () => {\n  _s();\n\n  let coordinates = [];\n  let [speed, setSpeed] = useState(0);\n  let [altitude, setAltitude] = useState(0); // let [distance, setDistance] = useState(0);\n\n  let [latitude, setLatitude] = useState(0);\n  let [longitude, setLongitude] = useState(0);\n  useEffect(() => {\n    console.log(latitude);\n  }, [latitude]);\n\n  function startWatch() {\n    if (\"geolocation\" in navigator && \"getCurrentPosition\" in navigator.geolocation) {\n      let watchPos = navigator.geolocation.getCurrentPosition(setPosition, () => {\n        console.log('err');\n      }, {\n        enableHighAccuracy: true,\n        maximumAge: 0\n      });\n    } else {\n      console.log(\"Geolocation not available!\");\n    }\n  }\n\n  ;\n\n  function setPosition(pos) {\n    setLatitude(pos.coords.latitude);\n    setLongitude(pos.coords.longitude);\n    setAltitude(pos.coords.altitude);\n    setSpeed(pos.coords.speed);\n    coordinates.push([latitude, longitude, altitude, speed]);\n    console.log(coordinates);\n    console.log(localStorage.setItem(\"coordinates\", JSON.stringify(coordinates)));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Timer, {\n    initialTime: 0,\n    startImmediately: false,\n    onStart: () => {\n      console.log('onStart hook');\n      startWatch();\n    },\n    onStop: () => console.log('onStop hook'),\n    onReset: () => console.log('onReset hook'),\n    children: ({\n      start,\n      resume,\n      pause,\n      stop,\n      reset,\n      timerState\n    }) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Timer.Hours, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), \" hours\\xA0\", /*#__PURE__*/_jsxDEV(Timer.Minutes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), \" minutes\\xA0\", /*#__PURE__*/_jsxDEV(Timer.Seconds, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), \" seconds\\xA0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(StartStopButton, {\n          startWatch: start,\n          stopWatch: stop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: reset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MyTimer, \"29x+KX3G/5ducIkrmbm80AZIkzc=\");\n\n_c = MyTimer;\nexport default MyTimer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyTimer\");","map":{"version":3,"sources":["C:/Users/tilak/OneDrive/Documents/GitHub/pwa-for-rde-test/src/components/MyTimer.js"],"names":["React","useState","useEffect","Timer","StartStopButton","MyTimer","coordinates","speed","setSpeed","altitude","setAltitude","latitude","setLatitude","longitude","setLongitude","console","log","startWatch","navigator","geolocation","watchPos","getCurrentPosition","setPosition","enableHighAccuracy","maximumAge","pos","coords","push","localStorage","setItem","JSON","stringify","start","resume","pause","stop","reset","timerState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport Timer from 'react-compound-timer'\r\nimport StartStopButton from './StartStopButton'\r\n\r\n\r\nconst MyTimer = () => {\r\n\r\n\r\n    let coordinates = [];\r\n\r\n    let [speed, setSpeed] = useState(0);\r\n    let [altitude, setAltitude] = useState(0);\r\n    // let [distance, setDistance] = useState(0);\r\n    let [latitude, setLatitude] = useState(0);\r\n    let [longitude, setLongitude] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(latitude)\r\n    }, [latitude])\r\n\r\n\r\n    function startWatch() {\r\n        if (\"geolocation\" in navigator && \"getCurrentPosition\" in navigator.geolocation) {\r\n            let watchPos = navigator.geolocation.getCurrentPosition(\r\n                setPosition,\r\n                () => { console.log('err') }\r\n                , {\r\n                    enableHighAccuracy: true,\r\n                    maximumAge: 0\r\n                });\r\n        } else {\r\n            console.log(\"Geolocation not available!\")\r\n        }\r\n\r\n    };\r\n\r\n    function setPosition(pos) {\r\n\r\n        setLatitude(pos.coords.latitude);\r\n        setLongitude(pos.coords.longitude);\r\n        setAltitude(pos.coords.altitude);\r\n        setSpeed(pos.coords.speed);\r\n\r\n        coordinates.push([latitude, longitude, altitude, speed]);\r\n        console.log(coordinates);\r\n        console.log(localStorage.setItem(\"coordinates\", JSON.stringify(coordinates)));\r\n    }\r\n    return (\r\n        <Timer\r\n            initialTime={0}\r\n            startImmediately={false}\r\n            onStart={() => { \r\n                console.log('onStart hook'); startWatch() }}\r\n            onStop={() => console.log('onStop hook')}\r\n            onReset={() => console.log('onReset hook')}\r\n        >\r\n            {({ start, resume, pause, stop, reset, timerState }) => (\r\n                <React.Fragment>\r\n                    <div>\r\n                        <Timer.Hours /> hours&nbsp;\r\n                        <Timer.Minutes /> minutes&nbsp;\r\n                        <Timer.Seconds /> seconds&nbsp;\r\n                    </div>\r\n                    <div>\r\n                        <StartStopButton startWatch={start} stopWatch={stop} />\r\n                        <button onClick={reset}>Reset</button>\r\n                    </div>\r\n                </React.Fragment>\r\n            )}\r\n        </Timer >\r\n    )\r\n}\r\n\r\nexport default MyTimer\r\n"]},"metadata":{},"sourceType":"module"}