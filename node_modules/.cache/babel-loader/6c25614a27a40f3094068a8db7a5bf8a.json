{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tilak\\\\OneDrive\\\\Documents\\\\GitHub\\\\pwa-for-rde-test\\\\src\\\\components\\\\StartStopButton.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport useSound from \"use-sound\";\nimport start from \"../sounds/start.mp3\";\nimport stop from \"../sounds/stop.mp3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StartStopButton = props => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  let [startDetect, setStartDetect] = useState(false);\n  let [text, setText] = useState(\"Start Tracking\");\n  const startButtonStyles = {\n    background: \"green\",\n    borderRadius: \"5px\",\n    fontSize: \"2rem\",\n    color: \"white\",\n    padding: \"6px 6px 6px\"\n  };\n  const stopButtonStyles = {\n    background: \"red\",\n    borderRadius: \"5px\",\n    fontSize: \"2rem\",\n    color: \"white\",\n    padding: \"6px 6px 6px\"\n  };\n  let [buttonStyles, setButtonStyles] = useState(startButtonStyles);\n\n  const StartHandler = () => {\n    _s();\n\n    setStartDetect(startDetect = !startDetect);\n    setText(startDetect ? \"Stop Tracking\" : \"Start Tracking\");\n    setButtonStyles(startDetect ? stopButtonStyles : startButtonStyles);\n\n    if (startDetect === true) {\n      props.startWatch();\n      useSound(start);\n    } else if (startDetect === false) {\n      props.stopWatch();\n    }\n  };\n\n  _s(StartHandler, \"OORg2omllOcUK1nQuh16v7xuLgY=\", false, function () {\n    return [useSound];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      style: buttonStyles,\n      onClick: StartHandler,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(StartStopButton, \"5X4dSESYVSYPtxGSSzliZ3N1Tbw=\");\n\n_c = StartStopButton;\nexport default StartStopButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"StartStopButton\");","map":{"version":3,"sources":["C:/Users/tilak/OneDrive/Documents/GitHub/pwa-for-rde-test/src/components/StartStopButton.js"],"names":["React","useState","useSound","start","stop","StartStopButton","props","startDetect","setStartDetect","text","setText","startButtonStyles","background","borderRadius","fontSize","color","padding","stopButtonStyles","buttonStyles","setButtonStyles","StartHandler","startWatch","stopWatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AAAA;;AAE/B,MAAI,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA5C;AACA,MAAI,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,gBAAD,CAA9B;AAEA,QAAMU,iBAAiB,GAAG;AACtBC,IAAAA,UAAU,EAAE,OADU;AAEtBC,IAAAA,YAAY,EAAE,KAFQ;AAGtBC,IAAAA,QAAQ,EAAE,MAHY;AAItBC,IAAAA,KAAK,EAAE,OAJe;AAKtBC,IAAAA,OAAO,EAAE;AALa,GAA1B;AAQA,QAAMC,gBAAgB,GAAG;AACrBL,IAAAA,UAAU,EAAE,KADS;AAErBC,IAAAA,YAAY,EAAE,KAFO;AAGrBC,IAAAA,QAAQ,EAAE,MAHW;AAIrBC,IAAAA,KAAK,EAAE,OAJc;AAKrBC,IAAAA,OAAO,EAAE;AALY,GAAzB;AAQA,MAAI,CAACE,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAACU,iBAAD,CAA9C;;AAEA,QAAMS,YAAY,GAAG,MAAM;AAAA;;AACvBZ,IAAAA,cAAc,CAACD,WAAW,GAAG,CAACA,WAAhB,CAAd;AACAG,IAAAA,OAAO,CAACH,WAAW,GAAG,eAAH,GAAqB,gBAAjC,CAAP;AACAY,IAAAA,eAAe,CAACZ,WAAW,GAAGU,gBAAH,GAAsBN,iBAAlC,CAAf;;AACA,QAAIJ,WAAW,KAAK,IAApB,EAA0B;AACtBD,MAAAA,KAAK,CAACe,UAAN;AACAnB,MAAAA,QAAQ,CAACC,KAAD,CAAR;AACH,KAHD,MAGO,IAAII,WAAW,KAAK,KAApB,EAA2B;AAC9BD,MAAAA,KAAK,CAACgB,SAAN;AACH;AACJ,GAVD;;AAvB+B,KAuBzBF,YAvByB;AAAA,YA6BvBlB,QA7BuB;AAAA;;AAmC/B,sBACI;AAAA,2BACI;AAAQ,MAAA,KAAK,EAAEgB,YAAf;AAA6B,MAAA,OAAO,EAAEE,YAAtC;AAAA,gBAAqDX;AAArD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAxCD;;IAAMJ,e;;KAAAA,e;AA0CN,eAAeA,eAAf","sourcesContent":["import React, { useState } from \"react\"\r\nimport useSound from \"use-sound\";\r\nimport start from \"../sounds/start.mp3\"\r\nimport stop from \"../sounds/stop.mp3\"\r\n\r\nconst StartStopButton = (props) => {\r\n\r\n    let [startDetect, setStartDetect] = useState(false);\r\n    let [text, setText] = useState(\"Start Tracking\");\r\n\r\n    const startButtonStyles = {\r\n        background: \"green\",\r\n        borderRadius: \"5px\",\r\n        fontSize: \"2rem\",\r\n        color: \"white\",\r\n        padding: \"6px 6px 6px\"\r\n    }\r\n\r\n    const stopButtonStyles = {\r\n        background: \"red\",\r\n        borderRadius: \"5px\",\r\n        fontSize: \"2rem\",\r\n        color: \"white\",\r\n        padding: \"6px 6px 6px\"\r\n    }\r\n\r\n    let [buttonStyles, setButtonStyles] = useState(startButtonStyles);\r\n\r\n    const StartHandler = () => {\r\n        setStartDetect(startDetect = !startDetect);\r\n        setText(startDetect ? \"Stop Tracking\" : \"Start Tracking\")\r\n        setButtonStyles(startDetect ? stopButtonStyles : startButtonStyles)\r\n        if (startDetect === true) {\r\n            props.startWatch();\r\n            useSound(start)\r\n        } else if (startDetect === false) {\r\n            props.stopWatch();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button style={buttonStyles} onClick={StartHandler}>{text}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StartStopButton"]},"metadata":{},"sourceType":"module"}