{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tilak\\\\OneDrive\\\\Documents\\\\GitHub\\\\pwa-for-rde-test\\\\src\\\\components\\\\NewTracker.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Timer from 'react-compound-timer';\nimport StartStopButton from './StartStopButton';\nimport useInterval from '../hooks/useInterval';\nimport \"../css/tracker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst haversine = require('haversine'); // import useSound from 'use-sound' // Leave this for adding sound notifications for later\n\n\nconst NewTracker = () => {\n  _s();\n\n  // BC variables:\n  let urbanMax = 33;\n  let ruralMax = 55;\n  let motorwayMax = 80; // State Variables:\n\n  const [delay] = useState(1000);\n  const [isOn, setIsOn] = useState(false);\n  const [coordinates, setCoordinates] = useState([]);\n  const [speed, setSpeed] = useState(0);\n  const [gpsSpeed, setGpsSpeed] = useState(0);\n  const [altitude, setAltitude] = useState(0);\n  const [latitude, setLatitude] = useState(0);\n  const [longitude, setLongitude] = useState(0);\n  const [timestamp, setTimestamp] = useState(0);\n  const [distance, setDistance] = useState(0);\n  const [accuracy, setAccuracy] = useState(0);\n  const [slowDist, setSlowDist] = useState(0);\n  const [mediumDist, setMediumDist] = useState(0);\n  const [fastDist, setFastDist] = useState(0); // Geolocation:\n\n  if (\"geolocation\" in navigator && \"watchPosition\" in navigator.geolocation) {\n    navigator.geolocation.watchPosition(pos => {\n      let deltaTime = (pos.timestamp - timestamp) / 3.6e+6; // ms -> hr\n      // console.log(\"⏳ Time Difference: \" + deltaTime)\n      // console.log(\"🔃 Latitude Difference: \" + (pos.coords.latitude - latitude))\n      // console.log(\"🔁 Longitude Difference: \" + (pos.coords.longitude - longitude))\n\n      let start = {\n        latitude: latitude,\n        longitude: longitude\n      };\n      let end = {\n        latitude: pos.coords.latitude,\n        longitude: pos.coords.longitude\n      };\n      let havDis = haversine(start, end, {\n        unit: 'km'\n      }); // console.log(\"💨 Distance Travelled: \" + havDis)\n\n      deltaTime = deltaTime === 0 ? 1 : deltaTime; // set to 1 to mask NaN error\n\n      let speed = havDis / deltaTime; // console.log(\"🏎 Calculated Speed: \" + speed + \"m/s\")\n      // Coordinates array data:\n\n      setLatitude(pos.coords.latitude);\n      setLongitude(pos.coords.longitude);\n      setAltitude(pos.coords.altitude);\n      setSpeed(speed);\n      setGpsSpeed(pos.coords.speed);\n      setTimestamp(pos.timestamp);\n      setAccuracy(pos.coords.accuracy); // start logging\n\n      if (latitude === 0 && longitude === 0) {\n        return;\n      }\n\n      setDistance(prev => prev + havDis);\n\n      if (speed < urbanMax) {\n        setSlowDist(prev => prev + havDis);\n      } else if (speed < ruralMax) {\n        setMediumDist(prev => prev + havDis);\n      } else if (speed < motorwayMax) {\n        setFastDist(prev => prev + havDis);\n      }\n    }, positionError(), {\n      enableHighAccuracy: true,\n      maximumAge: 0\n    });\n  } else {\n    console.log('Geolocation is not available.');\n  }\n\n  useInterval(() => {\n    setCoordinates(coordinates.concat([latitude, longitude, altitude, speed, gpsSpeed, timestamp, accuracy]));\n    console.log(JSON.stringify(coordinates));\n    localStorage.setItem(\"coordinates\", JSON.stringify(coordinates));\n  }, isOn ? delay : null);\n\n  function positionError(error) {\n    switch (error) {\n      case error.PERMISSION_DENIED:\n        console.error(\"User denied Geolocation request.\");\n        break;\n\n      case error.POSITION_UNAVAILABLE:\n        console.error(\"Position unavailable.\");\n        break;\n\n      case error.TIMEOUT:\n        console.error(\"Request timed out.\");\n        break;\n\n      case error.UNKNOWN_ERROR:\n        console.error(\"An unknown error occured.\");\n        break;\n\n      default:\n        console.warn('ERROR');\n        break;\n    }\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Timer, {\n      initialTime: 0,\n      startImmediately: false,\n      onStart: () => {\n        console.log('onStart hook');\n        setIsOn(true);\n      },\n      onStop: () => {\n        console.log('onStop hook');\n        setIsOn(false);\n      },\n      onReset: () => {\n        console.log('onReset hook');\n        setIsOn(false);\n        setCoordinates([]); // localStorage.setItem(\"coordinates\", JSON.stringify(coordinates));\n      },\n      children: ({\n        start,\n        resume,\n        pause,\n        stop,\n        reset,\n        timerState\n      }) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Timer.Hours, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this), \" Hrs\\xA0\", /*#__PURE__*/_jsxDEV(Timer.Minutes, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 29\n          }, this), \" Min\\xA0\", /*#__PURE__*/_jsxDEV(Timer.Seconds, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 29\n          }, this), \" Sec\\xA0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(StartStopButton, {\n            startWatch: start,\n            stopWatch: stop\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: reset,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"TESTS E, F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" ------------- RAW DATA: ------------- \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Data-Label\",\n      children: [\"speed is: \", speed, \" [km/h]\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Data-Label\",\n      children: [\"GPS speed is: \", gpsSpeed, \" [km/h]\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" ------------------------------------- \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"altitude is: \", altitude, \" [m]\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"latitude is: \", latitude, \" [\\xB0]\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"longitude is: \", longitude, \" [\\xB0]\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"GPS accuracy is: \", accuracy, \" [m] \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" ------------- BC VERIFICATION: ------------- \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"cumulative distance is: \", distance, \" [km]\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"trip segment is:\\xA0\", speed < urbanMax && \"URBAN\", speed > urbanMax && speed < ruralMax && \"RURAL\", speed > ruralMax && speed < motorwayMax && \"MOTORWAY\", \"\\xA0[U/R/M]\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"U distance share is: \", slowDist, \" [km]\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"R distance share is: \", mediumDist, \" [km]\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"M distance share is: \", fastDist, \" [km]\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewTracker, \"sOGbM20PMGkUm/6reJjcR6I1qaQ=\", false, function () {\n  return [useInterval];\n});\n\n_c = NewTracker;\nexport default NewTracker;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTracker\");","map":{"version":3,"sources":["C:/Users/tilak/OneDrive/Documents/GitHub/pwa-for-rde-test/src/components/NewTracker.js"],"names":["React","useState","Timer","StartStopButton","useInterval","haversine","require","NewTracker","urbanMax","ruralMax","motorwayMax","delay","isOn","setIsOn","coordinates","setCoordinates","speed","setSpeed","gpsSpeed","setGpsSpeed","altitude","setAltitude","latitude","setLatitude","longitude","setLongitude","timestamp","setTimestamp","distance","setDistance","accuracy","setAccuracy","slowDist","setSlowDist","mediumDist","setMediumDist","fastDist","setFastDist","navigator","geolocation","watchPosition","pos","deltaTime","start","end","coords","havDis","unit","prev","positionError","enableHighAccuracy","maximumAge","console","log","concat","JSON","stringify","localStorage","setItem","error","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR","warn","resume","pause","stop","reset","timerState"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport Timer from 'react-compound-timer'\r\nimport StartStopButton from './StartStopButton'\r\nimport useInterval from '../hooks/useInterval'\r\nimport \"../css/tracker.css\"\r\n\r\nconst haversine = require('haversine')\r\n\r\n// import useSound from 'use-sound' // Leave this for adding sound notifications for later\r\n\r\nconst NewTracker = () => {\r\n\r\n    // BC variables:\r\n    let urbanMax = 33;\r\n    let ruralMax = 55;\r\n    let motorwayMax = 80;\r\n\r\n    // State Variables:\r\n    const [delay] = useState(1000);\r\n    const [isOn, setIsOn] = useState(false)\r\n\r\n    const [coordinates, setCoordinates] = useState([]);\r\n\r\n    const [speed, setSpeed] = useState(0);\r\n    const [gpsSpeed, setGpsSpeed] = useState(0);\r\n    const [altitude, setAltitude] = useState(0);\r\n    const [latitude, setLatitude] = useState(0);\r\n    const [longitude, setLongitude] = useState(0);\r\n    const [timestamp, setTimestamp] = useState(0);\r\n    const [distance, setDistance] = useState(0);\r\n    const [accuracy, setAccuracy] = useState(0);\r\n\r\n    const [slowDist, setSlowDist] = useState(0);\r\n    const [mediumDist, setMediumDist] = useState(0);\r\n    const [fastDist, setFastDist] = useState(0);\r\n\r\n    // Geolocation:\r\n    if (\"geolocation\" in navigator && \"watchPosition\" in navigator.geolocation) {\r\n        navigator.geolocation.watchPosition(\r\n            (pos) => {\r\n\r\n                let deltaTime = (pos.timestamp - timestamp) / 3.6e+6; // ms -> hr\r\n                // console.log(\"⏳ Time Difference: \" + deltaTime)\r\n                // console.log(\"🔃 Latitude Difference: \" + (pos.coords.latitude - latitude))\r\n                // console.log(\"🔁 Longitude Difference: \" + (pos.coords.longitude - longitude))\r\n\r\n                let start = {\r\n                    latitude: latitude,\r\n                    longitude: longitude,\r\n                }\r\n\r\n                let end = {\r\n                    latitude: pos.coords.latitude,\r\n                    longitude: pos.coords.longitude,\r\n                }\r\n\r\n                let havDis = haversine(start, end, { unit: 'km' })\r\n                // console.log(\"💨 Distance Travelled: \" + havDis)\r\n\r\n                deltaTime = (deltaTime === 0) ? 1 : deltaTime; // set to 1 to mask NaN error\r\n                let speed = (havDis / deltaTime);\r\n                // console.log(\"🏎 Calculated Speed: \" + speed + \"m/s\")\r\n\r\n                // Coordinates array data:\r\n                setLatitude(pos.coords.latitude);\r\n                setLongitude(pos.coords.longitude);\r\n                setAltitude(pos.coords.altitude);\r\n                setSpeed(speed);\r\n                setGpsSpeed(pos.coords.speed);\r\n                setTimestamp(pos.timestamp);\r\n                setAccuracy(pos.coords.accuracy);\r\n\r\n                // start logging\r\n                if (latitude === 0 && longitude === 0) {\r\n                    return\r\n                }\r\n\r\n                setDistance(prev => prev + havDis)\r\n\r\n                if (speed < urbanMax) {\r\n                    setSlowDist(prev => prev + havDis)\r\n                } else if (speed < ruralMax) {\r\n                    setMediumDist(prev => prev + havDis)\r\n                } else if (speed < motorwayMax) {\r\n                    setFastDist(prev => prev + havDis)\r\n                }\r\n\r\n            },\r\n\r\n            positionError(),\r\n\r\n            {\r\n                enableHighAccuracy: true,\r\n                maximumAge: 0\r\n            }\r\n        );\r\n\r\n    } else {\r\n        console.log('Geolocation is not available.');\r\n    }\r\n\r\n    useInterval(() => {\r\n        setCoordinates(coordinates.concat([latitude, longitude, altitude, speed, gpsSpeed, timestamp, accuracy]));\r\n        console.log(JSON.stringify(coordinates));\r\n        localStorage.setItem(\"coordinates\", JSON.stringify(coordinates));\r\n    }, isOn ? delay : null)\r\n\r\n\r\n\r\n    function positionError(error) {\r\n        switch (error) {\r\n            case error.PERMISSION_DENIED:\r\n                console.error(\"User denied Geolocation request.\");\r\n                break;\r\n            case error.POSITION_UNAVAILABLE:\r\n                console.error(\"Position unavailable.\");\r\n                break;\r\n            case error.TIMEOUT:\r\n                console.error(\"Request timed out.\");\r\n                break;\r\n            case error.UNKNOWN_ERROR:\r\n                console.error(\"An unknown error occured.\");\r\n                break;\r\n            default:\r\n                console.warn('ERROR');\r\n                break;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Timer\r\n                initialTime={0}\r\n                startImmediately={false}\r\n                onStart={() => {\r\n                    console.log('onStart hook');\r\n                    setIsOn(true);\r\n                }}\r\n                onStop={() => {\r\n                    console.log('onStop hook');\r\n                    setIsOn(false);\r\n                }}\r\n                onReset={() => {\r\n                    console.log('onReset hook')\r\n                    setIsOn(false);\r\n                    setCoordinates([]);\r\n                    // localStorage.setItem(\"coordinates\", JSON.stringify(coordinates));\r\n                }}\r\n            >\r\n                {({ start, resume, pause, stop, reset, timerState }) => (\r\n                    <React.Fragment>\r\n                        <div>\r\n                            <Timer.Hours /> Hrs&nbsp;\r\n                            <Timer.Minutes /> Min&nbsp;\r\n                            <Timer.Seconds /> Sec&nbsp;\r\n                        </div>\r\n\r\n                        <div>\r\n                            <StartStopButton startWatch={start} stopWatch={stop} />\r\n                            <button onClick={reset}>Reset</button>\r\n                        </div>\r\n\r\n                    </React.Fragment>\r\n                )}\r\n            </Timer >\r\n\r\n            <div>TESTS E, F</div>\r\n            <div> ------------- RAW DATA: ------------- </div>\r\n            <div className=\"Data-Label\">speed is: {speed} [km/h]</div>\r\n            <div className=\"Data-Label\">GPS speed is: {gpsSpeed} [km/h]</div>\r\n            <div> ------------------------------------- </div>\r\n            <div>altitude is: {altitude} [m]</div>\r\n            <div>latitude is: {latitude} [&deg;]</div>\r\n            <div>longitude is: {longitude} [&deg;]</div>\r\n            <div>GPS accuracy is: {accuracy} [m] </div>\r\n            <div> ------------- BC VERIFICATION: ------------- </div>\r\n            <div>cumulative distance is: {distance} [km]</div>\r\n            <div>trip segment is:&nbsp;\r\n                    {speed < urbanMax &&\r\n                    \"URBAN\"\r\n                }\r\n                {speed > urbanMax && speed < ruralMax &&\r\n                    \"RURAL\"\r\n                }\r\n                {speed > ruralMax && speed < motorwayMax &&\r\n                    \"MOTORWAY\"\r\n                }\r\n                    &nbsp;[U/R/M]</div>\r\n            {/* <div>U share is: ____ [%]</div>\r\n            <div>R share is: ____ [%]</div>\r\n            <div>M share is: ____ [%]</div> */}\r\n            <div>U distance share is: {slowDist} [km]</div>\r\n            <div>R distance share is: {mediumDist} [km]</div>\r\n            <div>M distance share is: {fastDist} [km]</div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default NewTracker\r\n"]},"metadata":{},"sourceType":"module"}