{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tilak\\\\OneDrive\\\\Documents\\\\GitHub\\\\pwa-for-rde-test\\\\src\\\\components\\\\idleTimer.js\";\nimport React from \"react\";\nimport Timer from \"react-compound-timer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction idleTimer(props) {\n  return /*#__PURE__*/_jsxDEV(Timer, {\n    lastUnit: \"s\",\n    checkpoints: [{\n      time: props.idleTime * 1000,\n      callback: () => {\n        console.log('IDLING EXCEEDED');\n      }\n    }],\n    children: ({\n      start,\n      resume,\n      pause,\n      stop,\n      reset,\n      timerState\n    }) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Timer.Seconds, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this), \" seconds\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n\nexport default idleTimer;","map":{"version":3,"sources":["C:/Users/tilak/OneDrive/Documents/GitHub/pwa-for-rde-test/src/components/idleTimer.js"],"names":["React","Timer","idleTimer","props","time","idleTime","callback","console","log","start","resume","pause","stop","reset","timerState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACtB,sBACI,QAAC,KAAD;AACI,IAAA,QAAQ,EAAC,GADb;AAEI,IAAA,WAAW,EAAE,CACT;AACIC,MAAAA,IAAI,EAAED,KAAK,CAACE,QAAN,GAAe,IADzB;AAEIC,MAAAA,QAAQ,EAAE,MAAM;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH;AAJL,KADS,CAFjB;AAAA,cAWK,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA,MAAT;AAAiBC,MAAAA,KAAjB;AAAwBC,MAAAA,IAAxB;AAA8BC,MAAAA,KAA9B;AAAqCC,MAAAA;AAArC,KAAD,kBACG,QAAC,KAAD,CAAO,QAAP;AAAA,8BACI;AAAA,gCACI,QAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAZR;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;;AACD,eAAeZ,SAAf","sourcesContent":["import React from \"react\"\r\nimport Timer from \"react-compound-timer\";\r\n\r\nfunction idleTimer(props) {\r\n    return (\r\n        <Timer\r\n            lastUnit=\"s\"\r\n            checkpoints={[\r\n                {\r\n                    time: props.idleTime*1000,\r\n                    callback: () => {\r\n                        console.log('IDLING EXCEEDED')\r\n                    },\r\n                },\r\n            ]}\r\n        >\r\n            {({ start, resume, pause, stop, reset, timerState }) => (\r\n                <React.Fragment>\r\n                    <div>\r\n                        <Timer.Seconds /> seconds\r\n                    </div>\r\n                    <br />\r\n                    <div>\r\n\r\n                    </div>\r\n                </React.Fragment>\r\n            )}\r\n        </Timer>\r\n    )\r\n}\r\nexport default idleTimer;"]},"metadata":{},"sourceType":"module"}