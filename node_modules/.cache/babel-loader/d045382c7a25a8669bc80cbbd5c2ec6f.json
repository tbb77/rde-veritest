{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tilak\\\\OneDrive\\\\Documents\\\\GitHub\\\\pwa-for-rde-test\\\\src\\\\components\\\\WatchTrackerHooks.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WatchTracker() {\n  _s();\n\n  let id, options;\n  const [latitude, setLatitude] = useState(0);\n  const [longitude, setLongitude] = useState(0);\n  const [accuracy, setAccuracy] = useState(0);\n  let coordinates = [];\n\n  function success(pos) {\n    console.log;\n    setLatitude(pos.coords.latitude);\n    setLongitude(pos.coords.longitude);\n    setAccuracy(pos.coords.accuracy);\n    coordinates.concat(...[latitude, longitude, accuracy]);\n    console.log(latitude); // console.log(JSON.stringify(coordinates));\n    // localStorage.setItem(\"coordinates\", JSON.stringify(coordinates));\n  }\n\n  function error(err) {\n    console.warn('ERROR(' + err.code + '): ' + err.message);\n  }\n\n  options = {\n    enableHighAccuracy: true,\n    maximumAge: 0\n  };\n\n  function startWatch() {\n    console.log(\"Starting Watch.\");\n    id = navigator.geolocation.watchPosition(success, error, options);\n  }\n\n  function stopWatch() {\n    console.log(\"Stopping Watch.\");\n    navigator.geolocation.clearWatch(id);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"[TESTS E, F]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startWatch,\n      children: \"start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopWatch,\n      children: \"stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WatchTracker, \"pkxqgKwWzJfHFnWSv1ln06QylZg=\");\n\n_c = WatchTracker;\nexport default WatchTracker;\n\nvar _c;\n\n$RefreshReg$(_c, \"WatchTracker\");","map":{"version":3,"sources":["C:/Users/tilak/OneDrive/Documents/GitHub/pwa-for-rde-test/src/components/WatchTrackerHooks.js"],"names":["useState","WatchTracker","id","options","latitude","setLatitude","longitude","setLongitude","accuracy","setAccuracy","coordinates","success","pos","console","log","coords","concat","error","err","warn","code","message","enableHighAccuracy","maximumAge","startWatch","navigator","geolocation","watchPosition","stopWatch","clearWatch"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACtB,MAAIC,EAAJ,EAAQC,OAAR;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,CAAD,CAAxC;AAEA,MAAIU,WAAW,GAAG,EAAlB;;AACA,WAASC,OAAT,CAAiBC,GAAjB,EAAsB;AAEpBC,IAAAA,OAAO,CAACC,GAAR;AACAT,IAAAA,WAAW,CAACO,GAAG,CAACG,MAAJ,CAAWX,QAAZ,CAAX;AACAG,IAAAA,YAAY,CAACK,GAAG,CAACG,MAAJ,CAAWT,SAAZ,CAAZ;AACAG,IAAAA,WAAW,CAACG,GAAG,CAACG,MAAJ,CAAWP,QAAZ,CAAX;AAEAE,IAAAA,WAAW,CAACM,MAAZ,CAAmB,GAAG,CACpBZ,QADoB,EAEpBE,SAFoB,EAGpBE,QAHoB,CAAtB;AAMAK,IAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ,EAboB,CAepB;AACA;AACD;;AAED,WAASa,KAAT,CAAeC,GAAf,EAAoB;AAClBL,IAAAA,OAAO,CAACM,IAAR,CAAa,WAAWD,GAAG,CAACE,IAAf,GAAsB,KAAtB,GAA8BF,GAAG,CAACG,OAA/C;AACD;;AAEDlB,EAAAA,OAAO,GAAG;AACRmB,IAAAA,kBAAkB,EAAE,IADZ;AAERC,IAAAA,UAAU,EAAE;AAFJ,GAAV;;AAKA,WAASC,UAAT,GAAsB;AACpBX,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAZ,IAAAA,EAAE,GAAGuB,SAAS,CAACC,WAAV,CAAsBC,aAAtB,CAAoChB,OAApC,EAA6CM,KAA7C,EAAoDd,OAApD,CAAL;AACD;;AAED,WAASyB,SAAT,GAAqB;AACnBf,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAW,IAAAA,SAAS,CAACC,WAAV,CAAsBG,UAAtB,CAAiC3B,EAAjC;AACD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEsB,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEI,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAtDQ3B,Y;;KAAAA,Y;AAwDT,eAAeA,YAAf","sourcesContent":["import {useState} from \"react\";\r\n\r\nfunction WatchTracker() {\r\n  let id, options;\r\n\r\n  const [latitude, setLatitude] = useState(0);\r\n  const [longitude, setLongitude] = useState(0);\r\n  const [accuracy, setAccuracy] = useState(0);\r\n\r\n  let coordinates = [];\r\n  function success(pos) {\r\n\r\n    console.log\r\n    setLatitude(pos.coords.latitude);\r\n    setLongitude(pos.coords.longitude);\r\n    setAccuracy(pos.coords.accuracy);\r\n    \r\n    coordinates.concat(...[\r\n      latitude,\r\n      longitude,\r\n      accuracy\r\n    ]);\r\n    \r\n    console.log(latitude)\r\n\r\n    // console.log(JSON.stringify(coordinates));\r\n    // localStorage.setItem(\"coordinates\", JSON.stringify(coordinates));\r\n  }\r\n\r\n  function error(err) {\r\n    console.warn('ERROR(' + err.code + '): ' + err.message);\r\n  }\r\n\r\n  options = {\r\n    enableHighAccuracy: true,\r\n    maximumAge: 0\r\n  };\r\n\r\n  function startWatch() {\r\n    console.log(\"Starting Watch.\")\r\n    id = navigator.geolocation.watchPosition(success, error, options);\r\n  }\r\n\r\n  function stopWatch() {\r\n    console.log(\"Stopping Watch.\");\r\n    navigator.geolocation.clearWatch(id);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>[TESTS E, F]</div>\r\n      <button onClick={startWatch}>start</button>\r\n      <button onClick={stopWatch}>stop</button>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default WatchTracker"]},"metadata":{},"sourceType":"module"}