{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tilak\\\\OneDrive\\\\Documents\\\\GitHub\\\\pwa-for-rde-test\\\\src\\\\components\\\\Tracker.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Timer from 'react-compound-timer';\nimport StartStopButton from './StartStopButton';\nimport useInterval from '../hooks/useInterval';\nimport useSound from 'use-sound'; // Leave this for adding sound notifications for later\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tracker = () => {\n  _s();\n\n  const delay = 1000;\n  const [isOn, setIsOn] = useState(false);\n  let coordinates = [];\n  let [speed, setSpeed] = useState(0);\n  let [altitude, setAltitude] = useState(0);\n  let [latitude, setLatitude] = useState(0);\n  let [longitude, setLongitude] = useState(0);\n  let [distance, setDistance] = useState(0);\n  let [cumDist, setCumDist] = useState(0);\n  useEffect(() => {\n    console.log(`Latitude Updated: ${latitude}`);\n  }, [latitude]);\n  useEffect(() => {\n    console.log(`Longitude Updated: ${longitude}`);\n  }, [longitude]);\n  useInterval(() => {\n    if (\"geolocation\" in navigator && \"getCurrentPosition\" in navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(pos => {\n        setLatitude(pos.coords.latitude);\n        setLongitude(pos.coords.longitude);\n        setAltitude(pos.coords.altitude);\n        setSpeed(pos.coords.speed);\n        coordinates.push([latitude, longitude, altitude, speed]);\n        console.log(coordinates);\n        console.log(localStorage.setItem(\"coordinates\", JSON.stringify(coordinates)));\n      }, () => {\n        console.log('couldnt be bothered to correctly capture the error so... here you are');\n      }, {\n        enableHighAccuracy: true,\n        maximumAge: 0\n      });\n    } else {\n      console.log(\"Geolocation not available!\");\n    }\n  }, isOn ? delay : null);\n  return /*#__PURE__*/_jsxDEV(Timer, {\n    initialTime: 0,\n    startImmediately: false,\n    onStart: () => {\n      console.log('onStart hook');\n      setIsOn(true);\n    },\n    onStop: () => {\n      console.log('onStop hook');\n      setIsOn(false);\n    },\n    onReset: () => {\n      console.log('onReset hook');\n      setIsOn(false); // TODO: {\n      // Clear array of variables and reset all useStates to 0\n      // Clear local storage\n      // } \n    },\n    children: ({\n      start,\n      resume,\n      pause,\n      stop,\n      reset,\n      timerState\n    }) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Timer.Hours, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), \" Hrs\\xA0\", /*#__PURE__*/_jsxDEV(Timer.Minutes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), \" Min\\xA0\", /*#__PURE__*/_jsxDEV(Timer.Seconds, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), \" Sec\\xA0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(StartStopButton, {\n          startWatch: start,\n          stopWatch: stop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            justifyContent: \"center\"\n          },\n          onClick: reset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" ------------- RAW DATA: ------------- \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"speed is: \", speed, \" [km/h]\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"altitude is: \", altitude, \" [m]\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"latitude is: \", latitude, \" [\\xB0]\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"longitude is: \", longitude, \" [\\xB0]\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" ------------- BC VERIFICATION: ------------- \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"cumulative distance is: ___ [km]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"trip segment is: ____ [U/R/M]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"U share is: ____ [%]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"R share is: ____ [%]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"M share is: ____ [%]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"U distance share is: ____ [km]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"R distance share is: ____ [%]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"M distance share is: ____ [%]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Tracker, \"TtZyiNjrfk6u9OXQBMROQ9lh/A0=\", false, function () {\n  return [useInterval];\n});\n\n_c = Tracker;\nexport default Tracker;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tracker\");","map":{"version":3,"sources":["C:/Users/tilak/OneDrive/Documents/GitHub/pwa-for-rde-test/src/components/Tracker.js"],"names":["React","useState","useEffect","Timer","StartStopButton","useInterval","useSound","Tracker","delay","isOn","setIsOn","coordinates","speed","setSpeed","altitude","setAltitude","latitude","setLatitude","longitude","setLongitude","distance","setDistance","cumDist","setCumDist","console","log","navigator","geolocation","getCurrentPosition","pos","coords","push","localStorage","setItem","JSON","stringify","enableHighAccuracy","maximumAge","start","resume","pause","stop","reset","timerState","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport Timer from 'react-compound-timer'\r\nimport StartStopButton from './StartStopButton'\r\nimport useInterval from '../hooks/useInterval'\r\nimport useSound from 'use-sound' // Leave this for adding sound notifications for later\r\n\r\nconst Tracker = () => {\r\n\r\n    const delay = 1000;\r\n    const [isOn, setIsOn] = useState(false)\r\n\r\n    let coordinates = [];\r\n\r\n    let [speed, setSpeed] = useState(0);\r\n    let [altitude, setAltitude] = useState(0);\r\n    let [latitude, setLatitude] = useState(0);\r\n    let [longitude, setLongitude] = useState(0);\r\n    let [distance, setDistance] = useState(0);\r\n    let [cumDist, setCumDist] = useState(0);\r\n\r\n    useEffect(() => {\r\n        console.log(`Latitude Updated: ${latitude}`)\r\n    }, [latitude])\r\n\r\n    useEffect(() => {\r\n        console.log(`Longitude Updated: ${longitude}`)\r\n    }, [longitude])\r\n\r\n    useInterval(() => {\r\n        if (\"geolocation\" in navigator && \"getCurrentPosition\" in navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(\r\n                (pos) => {\r\n                    setLatitude(pos.coords.latitude);\r\n                    setLongitude(pos.coords.longitude);\r\n                    setAltitude(pos.coords.altitude);\r\n                    setSpeed(pos.coords.speed);\r\n\r\n                    coordinates.push([latitude, longitude, altitude, speed]);\r\n                    console.log(coordinates);\r\n                    console.log(localStorage.setItem(\"coordinates\", JSON.stringify(coordinates)));\r\n                },\r\n                () => { console.log('couldnt be bothered to correctly capture the error so... here you are') }\r\n                , {\r\n                    enableHighAccuracy: true,\r\n                    maximumAge: 0\r\n                });\r\n        } else {\r\n            console.log(\"Geolocation not available!\")\r\n        }\r\n    },\r\n        isOn ? delay : null,\r\n    )\r\n\r\n    return (\r\n        <Timer\r\n            initialTime={0}\r\n            startImmediately={false}\r\n            onStart={() => {\r\n                console.log('onStart hook');\r\n                setIsOn(true);\r\n            }}\r\n            onStop={() => {\r\n                console.log('onStop hook');\r\n                setIsOn(false);\r\n            }}\r\n            onReset={() => {\r\n                console.log('onReset hook')\r\n                setIsOn(false);\r\n                // TODO: {\r\n                // Clear array of variables and reset all useStates to 0\r\n                // Clear local storage\r\n                // } \r\n            }}\r\n        >\r\n            {({ start, resume, pause, stop, reset, timerState }) => (\r\n                <React.Fragment>\r\n                    <div>\r\n                        <Timer.Hours /> Hrs&nbsp;\r\n                        <Timer.Minutes /> Min&nbsp;\r\n                        <Timer.Seconds /> Sec&nbsp;\r\n                    </div>\r\n\r\n                    <div>\r\n                        <StartStopButton startWatch={start} stopWatch={stop} />\r\n                        <button style={{justifyContent: \"center\"}} onClick={reset}>Reset</button>\r\n                    </div>\r\n\r\n                    <div> ------------- RAW DATA: ------------- </div>\r\n                    <div>speed is: {speed} [km/h]</div>\r\n                    <div>altitude is: {altitude} [m]</div>\r\n                    <div>latitude is: {latitude} [&deg;]</div>\r\n                    <div>longitude is: {longitude} [&deg;]</div>\r\n                    <div> ------------- BC VERIFICATION: ------------- </div>\r\n                    <div>cumulative distance is: ___ [km]</div>\r\n                    <div>trip segment is: ____ [U/R/M]</div>\r\n                    <div>U share is: ____ [%]</div>\r\n                    <div>R share is: ____ [%]</div>\r\n                    <div>M share is: ____ [%]</div>\r\n                    <div>U distance share is: ____ [km]</div>\r\n                    <div>R distance share is: ____ [%]</div>                    \r\n                    <div>M distance share is: ____ [%]</div>                    \r\n\r\n                </React.Fragment>\r\n            )}\r\n        </Timer >\r\n    )\r\n}\r\n\r\nexport default Tracker\r\n"]},"metadata":{},"sourceType":"module"}