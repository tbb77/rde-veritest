{"ast":null,"code":"import _slicedToArray from\"C:/Users/tilak/OneDrive/Documents/GitHub/pwa-for-rde-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import'./App.css';import StartStopButton from'./StartStopButton';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var watchPos;// let [stopWatch2, setStopWatch2] = useState(false);\nfunction startWatch(){if(\"geolocation\"in navigator&&\"getCurrentPosition\"in navigator.geolocation){watchPos=navigator.geolocation.getCurrentPosition(setPosition,positionError,{enableHighAccuracy:true,maximumAge:0});}else{console.log(\"Geolocation not available!\");}};// setStopWatch2(stopWatch2 = true);\nvar coordinates=[];var _useState=useState(0),_useState2=_slicedToArray(_useState,2),speed=_useState2[0],setSpeed=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),altitude=_useState4[0],setAltitude=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),distance=_useState6[0],setDistance=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),latitude=_useState8[0],setLatitude=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),longitude=_useState10[0],setLongitude=_useState10[1];// TIMER\nvar _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),time=_useState12[0],setTime=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),timerOn=_useState14[0],setTimerOn=_useState14[1];useEffect(function(){var interval=null;if(timerOn){interval=setInterval(function(){setTime(function(prevTime){return prevTime+10;});console.log(time);},10);}else{clearInterval(interval);}return function(){return clearInterval(interval);};},[timerOn,time]);// WATCH POSITION SETTER \nfunction setPosition(pos){setLatitude(pos.coords.latitude);setLongitude(pos.coords.longitude);setAltitude(pos.coords.altitude);setSpeed(pos.coords.speed);coordinates.push([latitude,longitude,altitude,speed]);console.log(coordinates);console.log(localStorage.setItem(\"coordinates\",JSON.stringify(coordinates)));}// function stopWatch() {\n//   navigator.geolocation.clearWatch(watchPos);\n//   watchPos = undefined;\n//   console.log(\"Tracking Stopped.\")\n//   console.log(coordinates);\n// }\nfunction positionError(error){switch(error.code){case error.PERMISSION_DENIED:console.error(\"User denied Geolocation request.\");break;case error.POSITION_UNAVAILABLE:console.error(\"Position unavailable.\");break;case error.TIMEOUT:console.error(\"Request timed out.\");break;case error.UNKNOWN_ERROR:console.error(\"An unknown error occured.\");break;default:console.warn('ERROR('+error.code+'): '+error.message);break;}};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"App-title\",children:\"RDE VeriTest (Dev)\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(StartStopButton,{onClick:function onClick(){return setTimerOn(true);},startWatch:startWatch,stopWatch:stopWatch})}),/*#__PURE__*/_jsxs(\"div\",{className:\"Data-Label\",children:[\"speed is: \",speed,\" [km/h]\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"Data-Label\",children:[\"time is: \",time,\" [hh:mm:ss]\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"Data-Label\",children:\"cumulative distance is: [km]\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"Data-Label\",children:[\"altitude is: \",altitude,\" [m]\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"Data-Label\",children:[\"latitude is: \",latitude,\" [\\xB0]\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"Data-Label\",children:[\"longitude is: \",longitude,\" [\\xB0]\"]})]})});};export default App;","map":{"version":3,"sources":["C:/Users/tilak/OneDrive/Documents/GitHub/pwa-for-rde-test/src/App.js"],"names":["React","useEffect","useState","StartStopButton","App","watchPos","startWatch","navigator","geolocation","getCurrentPosition","setPosition","positionError","enableHighAccuracy","maximumAge","console","log","coordinates","speed","setSpeed","altitude","setAltitude","distance","setDistance","latitude","setLatitude","longitude","setLongitude","time","setTime","timerOn","setTimerOn","interval","setInterval","prevTime","clearInterval","pos","coords","push","localStorage","setItem","JSON","stringify","error","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR","warn","message","stopWatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport './App.css';\r\nimport StartStopButton from './StartStopButton'\r\n\r\nconst App = () => {\r\n\r\n  let watchPos;\r\n  // let [stopWatch2, setStopWatch2] = useState(false);\r\n\r\n\r\n  function startWatch() {\r\n    if (\"geolocation\" in navigator && \"getCurrentPosition\" in navigator.geolocation) {\r\n      watchPos = navigator.geolocation.getCurrentPosition(setPosition, positionError, {\r\n        enableHighAccuracy: true,\r\n        maximumAge: 0\r\n      });\r\n    } else {\r\n      console.log(\"Geolocation not available!\")\r\n    }\r\n\r\n  };\r\n\r\n  // setStopWatch2(stopWatch2 = true);\r\n\r\n  let coordinates = [];\r\n\r\n  let [speed, setSpeed] = useState(0);\r\n  let [altitude, setAltitude] = useState(0);\r\n  let [distance, setDistance] = useState(0);\r\n  let [latitude, setLatitude] = useState(0);\r\n  let [longitude, setLongitude] = useState(0);\r\n\r\n  // TIMER\r\n\r\n  let [time, setTime] = useState(0);\r\n  let [timerOn, setTimerOn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let interval = null;\r\n\r\n    if (timerOn) {\r\n      interval = setInterval(() => {\r\n        setTime(prevTime => prevTime + 10)\r\n        console.log(time);\r\n      }, 10)\r\n    } else {\r\n      clearInterval(interval)\r\n    }\r\n\r\n    return () => clearInterval(interval)\r\n  }, [timerOn, time])\r\n\r\n  // WATCH POSITION SETTER \r\n\r\n  function setPosition(pos) {\r\n\r\n    setLatitude(pos.coords.latitude);\r\n    setLongitude(pos.coords.longitude);\r\n    setAltitude(pos.coords.altitude);\r\n    setSpeed(pos.coords.speed);\r\n\r\n    coordinates.push([latitude, longitude, altitude, speed]);\r\n    console.log(coordinates);\r\n    console.log(localStorage.setItem(\"coordinates\", JSON.stringify(coordinates)));\r\n  }\r\n\r\n  // function stopWatch() {\r\n  //   navigator.geolocation.clearWatch(watchPos);\r\n  //   watchPos = undefined;\r\n  //   console.log(\"Tracking Stopped.\")\r\n  //   console.log(coordinates);\r\n  // }\r\n\r\n  function positionError(error) {\r\n    switch (error.code) {\r\n      case error.PERMISSION_DENIED:\r\n        console.error(\"User denied Geolocation request.\");\r\n        break;\r\n      case error.POSITION_UNAVAILABLE:\r\n        console.error(\"Position unavailable.\");\r\n        break;\r\n      case error.TIMEOUT:\r\n        console.error(\"Request timed out.\");\r\n        break;\r\n      case error.UNKNOWN_ERROR:\r\n        console.error(\"An unknown error occured.\");\r\n        break;\r\n      default:\r\n        console.warn('ERROR(' + error.code + '): ' + error.message);\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1 className=\"App-title\">RDE VeriTest (Dev)</h1>\r\n        <div>\r\n          <StartStopButton onClick={() => setTimerOn(true)} startWatch={startWatch} stopWatch={stopWatch} />\r\n        </div>\r\n        <div className=\"Data-Label\">speed is: {speed} [km/h]</div>\r\n        <div className=\"Data-Label\">time is: {time} [hh:mm:ss]</div>\r\n        <div className=\"Data-Label\">cumulative distance is: [km]</div>\r\n        <div className=\"Data-Label\">altitude is: {altitude} [m]</div>\r\n        <div className=\"Data-Label\">latitude is: {latitude} [&deg;]</div>\r\n        <div className=\"Data-Label\">longitude is: {longitude} [&deg;]</div>\r\n      </header>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}