{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tilak\\\\OneDrive\\\\Documents\\\\GitHub\\\\pwa-for-rde-test\\\\src\\\\components\\\\TempTracker2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tracker() {\n  _s();\n\n  const [lat, setLat] = useState(0);\n  const [lng, setLng] = useState(0);\n  const [id, setId] = useState(0);\n  setId();\n\n  function startWatch() {\n    if (\"geolocation\" in navigator && \"watchPosition\" in navigator.geolocation) {\n      id = navigator.geolocation.watchPosition(pos => {\n        setLat(pos.latitude);\n        setLng(pos.longitude);\n        console.log(```lat is: ${pos.latitude}.```);\n        console.log(```long is: ${pos.longitude}.```);\n      }, positionError());\n    } else {\n      console.log(\"Geolocation not available.\");\n    }\n  }\n\n  function positionError() {\n    console.log(\"ERROR\");\n  }\n\n  function stopWatch() {\n    navigator.geolocation.clearWatch(id);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startWatch(),\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopWatch(),\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"lat: \", lat]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"long: \", lng]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Tracker, \"Y8ctoYJB0fTQHPQCPgszgehLmcY=\");\n\n_c = Tracker;\nexport default Tracker;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tracker\");","map":{"version":3,"sources":["C:/Users/tilak/OneDrive/Documents/GitHub/pwa-for-rde-test/src/components/TempTracker2.js"],"names":["React","useState","Tracker","lat","setLat","lng","setLng","id","setId","startWatch","navigator","geolocation","watchPosition","pos","latitude","longitude","console","log","positionError","stopWatch","clearWatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACf,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBH,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACI,GAAD,EAAMC,MAAN,IAAgBL,QAAQ,CAAC,CAAD,CAA9B;AAEA,QAAM,CAACM,EAAD,EAAKC,KAAL,IAAcP,QAAQ,CAAC,CAAD,CAA5B;AAEAO,EAAAA,KAAK;;AAEL,WAASC,UAAT,GAAsB;AAClB,QAAI,iBAAiBC,SAAjB,IAA8B,mBAAmBA,SAAS,CAACC,WAA/D,EAA4E;AACxEJ,MAAAA,EAAE,GAAGG,SAAS,CAACC,WAAV,CAAsBC,aAAtB,CAAqCC,GAAD,IAAS;AAC9CT,QAAAA,MAAM,CAACS,GAAG,CAACC,QAAL,CAAN;AACAR,QAAAA,MAAM,CAACO,GAAG,CAACE,SAAL,CAAN;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAa,EAAE,WAAUJ,GAAG,CAACC,QAAS,GAAG,EAAzC;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAa,EAAE,YAAWJ,GAAG,CAACE,SAAU,GAAG,EAA3C;AACH,OALI,EAKFG,aAAa,EALX,CAAL;AAMH,KAPD,MAOO;AACHF,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACH;AACJ;;AAED,WAASC,aAAT,GAAyB;AACrBF,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;;AAED,WAASE,SAAT,GAAqB;AACjBT,IAAAA,SAAS,CAACC,WAAV,CAAsBS,UAAtB,CAAiCb,EAAjC;AACH;;AAED,sBACI;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAEE,UAAU,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEU,SAAS,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,0BAAWhB,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,2BAAYE,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GArCQH,O;;KAAAA,O;AAuCT,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\"\r\n\r\nfunction Tracker() {\r\n    const [lat, setLat] = useState(0);\r\n    const [lng, setLng] = useState(0);\r\n\r\n    const [id, setId] = useState(0);\r\n\r\n    setId()\r\n\r\n    function startWatch() {\r\n        if (\"geolocation\" in navigator && \"watchPosition\" in navigator.geolocation) {\r\n            id = navigator.geolocation.watchPosition((pos) => {\r\n                setLat(pos.latitude);\r\n                setLng(pos.longitude);\r\n                console.log(```lat is: ${pos.latitude}.```)\r\n                console.log(```long is: ${pos.longitude}.```)\r\n            }, positionError())\r\n        } else {\r\n            console.log(\"Geolocation not available.\")\r\n        }\r\n    }\r\n\r\n    function positionError() {\r\n        console.log(\"ERROR\")\r\n    }\r\n\r\n    function stopWatch() {\r\n        navigator.geolocation.clearWatch(id);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={startWatch()}>Start</button>\r\n            <button onClick={stopWatch()}>Stop</button>\r\n            <div>lat: {lat}</div>\r\n            <div>long: {lng}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tracker;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}