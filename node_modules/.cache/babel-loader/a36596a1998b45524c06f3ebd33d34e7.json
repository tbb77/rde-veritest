{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tilak\\\\OneDrive\\\\Documents\\\\GitHub\\\\pwa-for-rde-test\\\\src\\\\components\\\\WatchTracker.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WatchTracker() {\n  let id, options;\n  let coordinates = [];\n\n  function success(pos) {\n    coordinates.push(...[pos.coords.latitude, pos.coords.longitude, pos.coords.accuracy]);\n    console.log(JSON.stringify(coordinates));\n    localStorage.setItem(\"coordinates\", JSON.stringify(coordinates));\n  }\n\n  function error(err) {\n    console.warn('ERROR(' + err.code + '): ' + err.message);\n  }\n\n  options = {\n    enableHighAccuracy: true,\n    maximumAge: 0\n  };\n\n  function startWatch() {\n    console.log(\"Starting Watch.\");\n    id = navigator.geolocation.watchPosition(success, error, options);\n  }\n\n  function stopWatch() {\n    console.log(\"Stopping Watch.\");\n    navigator.geolocation.clearWatch(id);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"[TESTS E, F]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startWatch,\n      children: \"start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopWatch,\n      children: \"stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_c = WatchTracker;\nexport default WatchTracker;\n\nvar _c;\n\n$RefreshReg$(_c, \"WatchTracker\");","map":{"version":3,"sources":["C:/Users/tilak/OneDrive/Documents/GitHub/pwa-for-rde-test/src/components/WatchTracker.js"],"names":["WatchTracker","id","options","coordinates","success","pos","push","coords","latitude","longitude","accuracy","console","log","JSON","stringify","localStorage","setItem","error","err","warn","code","message","enableHighAccuracy","maximumAge","startWatch","navigator","geolocation","watchPosition","stopWatch","clearWatch"],"mappings":";;;AACA,SAASA,YAAT,GAAwB;AACtB,MAAIC,EAAJ,EAAQC,OAAR;AAGA,MAAIC,WAAW,GAAG,EAAlB;;AACA,WAASC,OAAT,CAAiBC,GAAjB,EAAsB;AAEpBF,IAAAA,WAAW,CAACG,IAAZ,CAAiB,GAAG,CAClBD,GAAG,CAACE,MAAJ,CAAWC,QADO,EAElBH,GAAG,CAACE,MAAJ,CAAWE,SAFO,EAGlBJ,GAAG,CAACE,MAAJ,CAAWG,QAHO,CAApB;AAMAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeX,WAAf,CAAZ;AACAY,IAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCH,IAAI,CAACC,SAAL,CAAeX,WAAf,CAApC;AACD;;AAED,WAASc,KAAT,CAAeC,GAAf,EAAoB;AAClBP,IAAAA,OAAO,CAACQ,IAAR,CAAa,WAAWD,GAAG,CAACE,IAAf,GAAsB,KAAtB,GAA8BF,GAAG,CAACG,OAA/C;AACD;;AAEDnB,EAAAA,OAAO,GAAG;AACRoB,IAAAA,kBAAkB,EAAE,IADZ;AAERC,IAAAA,UAAU,EAAE;AAFJ,GAAV;;AAKA,WAASC,UAAT,GAAsB;AACpBb,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAX,IAAAA,EAAE,GAAGwB,SAAS,CAACC,WAAV,CAAsBC,aAAtB,CAAoCvB,OAApC,EAA6Ca,KAA7C,EAAoDf,OAApD,CAAL;AACD;;AAED,WAAS0B,SAAT,GAAqB;AACnBjB,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAa,IAAAA,SAAS,CAACC,WAAV,CAAsBG,UAAtB,CAAiC5B,EAAjC;AACD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEuB,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEI,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KA5CQ5B,Y;AA8CT,eAAeA,YAAf","sourcesContent":["\r\nfunction WatchTracker() {\r\n  let id, options;\r\n\r\n\r\n  let coordinates = [];\r\n  function success(pos) {\r\n\r\n    coordinates.push(...[\r\n      pos.coords.latitude,\r\n      pos.coords.longitude,\r\n      pos.coords.accuracy\r\n    ]);\r\n\r\n    console.log(JSON.stringify(coordinates));\r\n    localStorage.setItem(\"coordinates\", JSON.stringify(coordinates));\r\n  }\r\n\r\n  function error(err) {\r\n    console.warn('ERROR(' + err.code + '): ' + err.message);\r\n  }\r\n\r\n  options = {\r\n    enableHighAccuracy: true,\r\n    maximumAge: 0\r\n  };\r\n\r\n  function startWatch() {\r\n    console.log(\"Starting Watch.\")\r\n    id = navigator.geolocation.watchPosition(success, error, options);\r\n  }\r\n\r\n  function stopWatch() {\r\n    console.log(\"Stopping Watch.\");\r\n    navigator.geolocation.clearWatch(id);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>[TESTS E, F]</div>\r\n      <button onClick={startWatch}>start</button>\r\n      <button onClick={stopWatch}>stop</button>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default WatchTracker"]},"metadata":{},"sourceType":"module"}