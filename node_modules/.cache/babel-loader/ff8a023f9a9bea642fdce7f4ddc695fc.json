{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRef, useEffect } from 'react';\n\nfunction useInterval(callback, delay) {\n  _s();\n\n  const savedCallback = useRef(callback); // Remember the latest callback if it changes.\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]); // Set up the interval.\n\n  useEffect(() => {\n    // Don't schedule if no delay is specified.\n    if (delay === null) {\n      return;\n    }\n\n    const id = setInterval(() => savedCallback.current(), delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n\n_s(useInterval, \"dqNZMqbncP+HtqBlD20aSNv0Ugk=\");\n\nexport default useInterval;","map":{"version":3,"sources":["C:/Users/tilak/OneDrive/Documents/GitHub/pwa-for-rde-test/src/hooks/useInterval.js"],"names":["useRef","useEffect","useInterval","callback","delay","savedCallback","current","id","setInterval","clearInterval"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;;AAEA,SAASC,WAAT,CAAqBC,QAArB,EAA2CC,KAA3C,EAAiE;AAAA;;AAC7D,QAAMC,aAAa,GAAGL,MAAM,CAACG,QAAD,CAA5B,CAD6D,CAG7D;;AACAF,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,aAAa,CAACC,OAAd,GAAwBH,QAAxB;AACH,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT,CAJ6D,CAQ7D;;AACAF,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAIG,KAAK,KAAK,IAAd,EAAoB;AAChB;AACH;;AAED,UAAMG,EAAE,GAAGC,WAAW,CAAC,MAAMH,aAAa,CAACC,OAAd,EAAP,EAAgCF,KAAhC,CAAtB;AAEA,WAAO,MAAMK,aAAa,CAACF,EAAD,CAA1B;AACH,GATQ,EASN,CAACH,KAAD,CATM,CAAT;AAUH;;GAnBQF,W;;AAqBT,eAAeA,WAAf","sourcesContent":["import { useRef, useEffect } from 'react'\r\n\r\nfunction useInterval(callback: () => void, delay: number | null) {\r\n    const savedCallback = useRef(callback)\r\n\r\n    // Remember the latest callback if it changes.\r\n    useEffect(() => {\r\n        savedCallback.current = callback\r\n    }, [callback])\r\n\r\n    // Set up the interval.\r\n    useEffect(() => {\r\n        // Don't schedule if no delay is specified.\r\n        if (delay === null) {\r\n            return\r\n        }\r\n\r\n        const id = setInterval(() => savedCallback.current(), delay)\r\n\r\n        return () => clearInterval(id)\r\n    }, [delay])\r\n}\r\n\r\nexport default useInterval\r\n"]},"metadata":{},"sourceType":"module"}