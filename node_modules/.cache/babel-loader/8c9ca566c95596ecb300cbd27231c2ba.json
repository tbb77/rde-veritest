{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tilak\\\\OneDrive\\\\Documents\\\\GitHub\\\\pwa-for-rde-test\\\\src\\\\components\\\\TempTracker.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport useInterval from \"../hooks/useInterval\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TempTracker() {\n  _s();\n\n  let id, options; // On off switch\n\n  const [isOn, setIsOn] = useState(false); // Data logging rate [1 Hz default]\n\n  const [delay] = useState(1000); // Output Data\n\n  const [latitude, setLatitude] = useState(0);\n  const [longitude, setLongitude] = useState(0);\n\n  function success(pos) {\n    console.log(\"Starting Watch.\"); // To start logging\n    // if (latitude === 0 && longitude === 0) {\n    //   return\n    // }\n    // Coordinates array data:\n\n    setLatitude(pos.coords.latitude);\n    setLongitude(pos.coords.longitude);\n    console.log(latitude);\n    console.log(longitude);\n  }\n\n  function error(err) {\n    console.warn('ERROR(' + err.code + '): ' + err.message);\n  }\n\n  options = {\n    enableHighAccuracy: false,\n    maximumAge: 0\n  }; // if (!isOn) {\n  //   console.log(\"Stopping Watch.\");\n  //   navigator.geolocation.clearWatch(id);\n  // }\n\n  function startWatch() {\n    id = navigator.geolocation.watchPosition(success, error, options);\n  }\n\n  function stopWatch() {\n    console.log(\"Stopping Watch.\");\n    navigator.geolocation.clearWatch(id);\n  } // const startHandler = () => {\n  //   setIsOn(true);\n  // }\n  // const stopHandler = () => {\n  //   setIsOn(false);\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startWatch,\n      children: \"start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopWatch,\n      children: \"stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TempTracker, \"CmcrGc3KE1+Q0PChyoOPTFjdxzs=\");\n\n_c = TempTracker;\nexport default TempTracker;\n\nvar _c;\n\n$RefreshReg$(_c, \"TempTracker\");","map":{"version":3,"sources":["C:/Users/tilak/OneDrive/Documents/GitHub/pwa-for-rde-test/src/components/TempTracker.js"],"names":["useState","useInterval","TempTracker","id","options","isOn","setIsOn","delay","latitude","setLatitude","longitude","setLongitude","success","pos","console","log","coords","error","err","warn","code","message","enableHighAccuracy","maximumAge","startWatch","navigator","geolocation","watchPosition","stopWatch","clearWatch"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACrB,MAAIC,EAAJ,EAAQC,OAAR,CADqB,CAGrB;;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC,CAJqB,CAMrB;;AACA,QAAM,CAACO,KAAD,IAAUP,QAAQ,CAAC,IAAD,CAAxB,CAPqB,CASrB;;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,CAAD,CAA1C;;AAKA,WAASY,OAAT,CAAiBC,GAAjB,EAAsB;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EADoB,CAGpB;AACA;AACA;AACA;AAEA;;AACAN,IAAAA,WAAW,CAACI,GAAG,CAACG,MAAJ,CAAWR,QAAZ,CAAX;AACAG,IAAAA,YAAY,CAACE,GAAG,CAACG,MAAJ,CAAWN,SAAZ,CAAZ;AAEAI,IAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AAED;;AAED,WAASO,KAAT,CAAeC,GAAf,EAAoB;AAClBJ,IAAAA,OAAO,CAACK,IAAR,CAAa,WAAWD,GAAG,CAACE,IAAf,GAAsB,KAAtB,GAA8BF,GAAG,CAACG,OAA/C;AACD;;AAEDjB,EAAAA,OAAO,GAAG;AACRkB,IAAAA,kBAAkB,EAAE,KADZ;AAERC,IAAAA,UAAU,EAAE;AAFJ,GAAV,CArCqB,CA0CrB;AACA;AACA;AACA;;AAEA,WAASC,UAAT,GAAsB;AACpBrB,IAAAA,EAAE,GAAGsB,SAAS,CAACC,WAAV,CAAsBC,aAAtB,CAAoCf,OAApC,EAA6CK,KAA7C,EAAoDb,OAApD,CAAL;AACD;;AAED,WAASwB,SAAT,GAAqB;AACnBd,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAU,IAAAA,SAAS,CAACC,WAAV,CAAsBG,UAAtB,CAAiC1B,EAAjC;AACD,GAtDoB,CAwDrB;AACA;AACA;AAEA;AACA;AACA;;;AAEA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEqB,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEI,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAvEQ1B,W;;KAAAA,W;AAyET,eAAeA,WAAf","sourcesContent":["import { useState } from \"react\"\r\nimport useInterval from \"../hooks/useInterval\"\r\n\r\nfunction TempTracker() {\r\n  let id, options;\r\n\r\n  // On off switch\r\n  const [isOn, setIsOn] = useState(false);\r\n\r\n  // Data logging rate [1 Hz default]\r\n  const [delay] = useState(1000);\r\n\r\n  // Output Data\r\n  const [latitude, setLatitude] = useState(0);\r\n  const [longitude, setLongitude] = useState(0);\r\n\r\n  \r\n\r\n\r\n  function success(pos) {\r\n    console.log(\"Starting Watch.\")\r\n\r\n    // To start logging\r\n    // if (latitude === 0 && longitude === 0) {\r\n    //   return\r\n    // }\r\n\r\n    // Coordinates array data:\r\n    setLatitude(pos.coords.latitude);\r\n    setLongitude(pos.coords.longitude);\r\n\r\n    console.log(latitude)\r\n    console.log(longitude)\r\n   \r\n  }\r\n\r\n  function error(err) {\r\n    console.warn('ERROR(' + err.code + '): ' + err.message);\r\n  }\r\n\r\n  options = {\r\n    enableHighAccuracy: false,\r\n    maximumAge: 0\r\n  };\r\n\r\n  // if (!isOn) {\r\n  //   console.log(\"Stopping Watch.\");\r\n  //   navigator.geolocation.clearWatch(id);\r\n  // }\r\n\r\n  function startWatch() {\r\n    id = navigator.geolocation.watchPosition(success, error, options);\r\n  }\r\n\r\n  function stopWatch() {\r\n    console.log(\"Stopping Watch.\");\r\n    navigator.geolocation.clearWatch(id);\r\n  }\r\n\r\n  // const startHandler = () => {\r\n  //   setIsOn(true);\r\n  // }\r\n\r\n  // const stopHandler = () => {\r\n  //   setIsOn(false);\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={startWatch}>start</button>\r\n      <button onClick={stopWatch}>stop</button>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default TempTracker"]},"metadata":{},"sourceType":"module"}