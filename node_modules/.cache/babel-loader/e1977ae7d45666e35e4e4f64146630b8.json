{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tilak\\\\OneDrive\\\\Documents\\\\GitHub\\\\pwa-for-rde-test\\\\src\\\\components\\\\StartStopButton.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StartStopButton = props => {\n  _s();\n\n  let [startDetect, setStartDetect] = useState(false);\n  let [resetDetect, setResetDetect] = useState(false);\n  let [text, setText] = useState(\"Start Tracking\");\n  const startButtonStyles = {// background: \"green\",\n    // borderRadius: \"5px\",\n    // fontSize: \"2rem\",\n    // color: \"white\",\n    // padding: \"10px 10px 10px\"\n  };\n  const stopButtonStyles = {// background: \"red\",\n    // borderRadius: \"5px\",\n    // fontSize: \"2rem\",\n    // color: \"white\",\n    // padding: \"10px 10px 10px\"\n  };\n  let [buttonStyles, setButtonStyles] = useState(startButtonStyles);\n\n  const StartHandler = () => {\n    setStartDetect(startDetect = !startDetect);\n    setText(startDetect ? \"Stop Tracking\" : \"Start Tracking\");\n    setButtonStyles(startDetect ? stopButtonStyles : startButtonStyles);\n\n    if (startDetect === true) {\n      props.startWatch();\n    } else if (startDetect === false) {\n      props.stopWatch();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      style: buttonStyles,\n      onClick: StartHandler,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StartStopButton, \"zBQii9NLu1GxUIQ2aWkSMhjx0ng=\");\n\n_c = StartStopButton;\nexport default StartStopButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"StartStopButton\");","map":{"version":3,"sources":["C:/Users/tilak/OneDrive/Documents/GitHub/pwa-for-rde-test/src/components/StartStopButton.js"],"names":["React","useState","StartStopButton","props","startDetect","setStartDetect","resetDetect","setResetDetect","text","setText","startButtonStyles","stopButtonStyles","buttonStyles","setButtonStyles","StartHandler","startWatch","stopWatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AAE/B,MAAI,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,KAAD,CAA5C;AACA,MAAI,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,KAAD,CAA5C;AACA,MAAI,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,gBAAD,CAA9B;AAEA,QAAMS,iBAAiB,GAAG,CACtB;AACA;AACA;AACA;AACA;AALsB,GAA1B;AAQA,QAAMC,gBAAgB,GAAG,CACrB;AACA;AACA;AACA;AACA;AALqB,GAAzB;AAQA,MAAI,CAACC,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAACS,iBAAD,CAA9C;;AAEA,QAAMI,YAAY,GAAG,MAAM;AACvBT,IAAAA,cAAc,CAACD,WAAW,GAAG,CAACA,WAAhB,CAAd;AACAK,IAAAA,OAAO,CAACL,WAAW,GAAG,eAAH,GAAqB,gBAAjC,CAAP;AACAS,IAAAA,eAAe,CAACT,WAAW,GAAGO,gBAAH,GAAsBD,iBAAlC,CAAf;;AACA,QAAIN,WAAW,KAAK,IAApB,EAA0B;AACtBD,MAAAA,KAAK,CAACY,UAAN;AACH,KAFD,MAEO,IAAIX,WAAW,KAAK,KAApB,EAA2B;AAC9BD,MAAAA,KAAK,CAACa,SAAN;AACH;AACJ,GATD;;AAWA,sBACI;AAAA,2BACI;AAAQ,MAAA,KAAK,EAAEJ,YAAf;AAA6B,MAAA,OAAO,EAAEE,YAAtC;AAAA,gBAAqDN;AAArD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAxCD;;GAAMN,e;;KAAAA,e;AA0CN,eAAeA,eAAf","sourcesContent":["import React, { useState } from \"react\"\r\n\r\nconst StartStopButton = (props) => {\r\n\r\n    let [startDetect, setStartDetect] = useState(false);\r\n    let [resetDetect, setResetDetect] = useState(false);\r\n    let [text, setText] = useState(\"Start Tracking\");\r\n\r\n    const startButtonStyles = {\r\n        // background: \"green\",\r\n        // borderRadius: \"5px\",\r\n        // fontSize: \"2rem\",\r\n        // color: \"white\",\r\n        // padding: \"10px 10px 10px\"\r\n    }\r\n\r\n    const stopButtonStyles = {\r\n        // background: \"red\",\r\n        // borderRadius: \"5px\",\r\n        // fontSize: \"2rem\",\r\n        // color: \"white\",\r\n        // padding: \"10px 10px 10px\"\r\n    }\r\n\r\n    let [buttonStyles, setButtonStyles] = useState(startButtonStyles);\r\n\r\n    const StartHandler = () => {\r\n        setStartDetect(startDetect = !startDetect);\r\n        setText(startDetect ? \"Stop Tracking\" : \"Start Tracking\")\r\n        setButtonStyles(startDetect ? stopButtonStyles : startButtonStyles)\r\n        if (startDetect === true) {\r\n            props.startWatch();\r\n        } else if (startDetect === false) {\r\n            props.stopWatch();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button style={buttonStyles} onClick={StartHandler}>{text}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StartStopButton"]},"metadata":{},"sourceType":"module"}